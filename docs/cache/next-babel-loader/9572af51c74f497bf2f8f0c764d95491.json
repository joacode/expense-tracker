{"ast":null,"code":"import apiClient from 'utils/apiClient';\n\n/**\n * @param {import('next').NextApiRequest} req\n * @param {import('next').NextApiResponse} res\n */\nconst path = '/api/records';\nexport const RecordsService = {\n  find: async () => {\n    const {\n      data\n    } = await apiClient.get(path);\n    return data;\n  },\n  create: async record => {\n    const {\n      data\n    } = await apiClient.post(path, record);\n    return data;\n  }\n};","map":{"version":3,"names":["apiClient","path","RecordsService","find","data","get","create","record","post"],"sources":["/Users/priscilabrey/Documents/joacode/financialTool/src/services/recordsService.ts"],"sourcesContent":["import apiClient from 'utils/apiClient'\nimport { RecordInterface } from '../models/record'\n\n/**\n * @param {import('next').NextApiRequest} req\n * @param {import('next').NextApiResponse} res\n */\n\nconst path = '/api/records'\n\nexport const RecordsService = {\n    find: async (): Promise<RecordInterface[]> => {\n        const { data } = await apiClient.get(path)\n        return data\n    },\n\n    create: async (record: RecordInterface): Promise<RecordInterface> => {\n        const { data } = await apiClient.post(path, record)\n        return data\n    },\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;;AAGA;AACA;AACA;AACA;AAEA,MAAMC,IAAI,GAAG,cAAb;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,IAAI,EAAE,YAAwC;IAC1C,MAAM;MAAEC;IAAF,IAAW,MAAMJ,SAAS,CAACK,GAAV,CAAcJ,IAAd,CAAvB;IACA,OAAOG,IAAP;EACH,CAJyB;EAM1BE,MAAM,EAAE,MAAOC,MAAP,IAA6D;IACjE,MAAM;MAAEH;IAAF,IAAW,MAAMJ,SAAS,CAACQ,IAAV,CAAeP,IAAf,EAAqBM,MAArB,CAAvB;IACA,OAAOH,IAAP;EACH;AATyB,CAAvB"},"metadata":{},"sourceType":"module"}